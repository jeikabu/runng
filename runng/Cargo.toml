[package]
name = "runng"
version = "0.3.1"
authors = ["Jake W <jeikabu@gmail.com>"]

description = "High-level wrapper around nng (Nanomsg-Next-Generation) aka Nanomsg2"
keywords = ["nng", "nanomsg", "zeromq", "runng"]
categories = ["network-programming"]
license = "MIT"
repository = "https://github.com/jeikabu/runng"
readme = "README.md"
edition = "2018"

[badges]
travis-ci = { repository = "jeikabu/runng", branch = "master" }
codecov = { repository = "jeikabu/runng", branch = "master", service = "github" }

[features]
default = ["pipes", "stats"]
# NngPipe/nng_pipe
pipes = []
stats = []

[dependencies]
bitflags = "1.0"
futures = { version = "0.3.0-alpha", package = "futures-preview" }
futures_util = { version = "0.3.0-alpha", package = "futures-util-preview" }
log = "0.4"
rand = "0.6"
runng_derive = { version = "0.2", path = "../runng_derive" }
runng-sys = { version = "1.2.3-rc", path = "../runng_sys", package = "nng-sys" }

# To enable bindgen only when building for PC, I'd like to have:
#[target.'cfg(target_arch = "x86_64")'.dependencies]
#runng-sys = { version = "1.1.1-rc", path = "../runng_sys", package = "nng-sys", features = ["build-bindgen"] }
#[target.'cfg(target_arch = "aarch64")'.dependencies]
#runng-sys = { version = "1.1.1-rc", path = "../runng_sys", package = "nng-sys" }
#
# But that doesn't work, `features` are set regardless of target arch.  
# Instead, could ignore the `build-bindgen` feature but that complicates everything:
#cfg!(any(target_arch = "arm", target_arch = "aarch64"))

[dev-dependencies]
env_logger = "0.6"
failure = "0.1"
futures-timer = "0.3"
